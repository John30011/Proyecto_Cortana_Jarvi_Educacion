{
  "project": {
    "name": "GEMINI Backend",
    "version": "1.2.0",
    "description": "Backend para la plataforma educativa GEMINI con arquitectura escalable",
    "repository": "https://github.com/org/gemini-backend",
    "documentation": "/docs",
    "last_updated": "2025-06-29T13:03:00-04:00"
  },
  "architecture": {
    "pattern": "Clean Architecture",
    "framework": "FastAPI",
    "database": {
      "type": "MongoDB",
      "driver": "Motor (async)",
      "version": "5.0+"
    },
    "layers": [
      "API Routes",
      "Services",
      "Repositories",
      "Models"
    ],
    "features": [
      "JWT Authentication with Refresh Tokens",
      "Rate Limiting (100 req/min)",
      "Input Validation with Pydantic",
      "CORS with Whitelisting",
      "Request Logging",
      "Environment-based Configuration",
      "Automated Setup Scripts"
    ]
  },
  "development": {
    "python_version": "^3.9",
    "package_manager": "Poetry",
    "hot_reload": true,
    "environment_vars": ".env",
    "start_script": "start.ps1",
    "database_script": "init_db.ps1"
  },
  "endpoints": {
    "auth": {
      "login": {
        "path": "/api/v1/auth/token",
        "method": "POST",
        "description": "Autenticación de usuarios con JWT",
        "parameters": ["username", "password"],
        "rate_limited": true,
        "response": {
          "access_token": "string (JWT)",
          "token_type": "bearer",
          "expires_in": 3600,
          "user": {
            "id": "string",
            "username": "string",
            "email": "string",
            "role": "string (user|admin)",
            "created_at": "datetime"
          }
        },
        "error_codes": [
          "400: Invalid credentials",
          "422: Validation error",
          "429: Too many requests"
        ]
      },
      "refresh_token": {
        "path": "/api/v1/auth/refresh",
        "method": "POST",
        "description": "Obtener un nuevo access token usando refresh token",
        "parameters": ["refresh_token"],
        "rate_limited": true
      }
    },
    "chat": {
      "send_message": {
        "path": "/api/v1/chat/messages",
        "method": "POST",
        "description": "Enviar un mensaje al chat",
        "authentication": true,
        "rate_limited": true,
        "parameters": {
          "message": "string (required)",
          "context": "object (optional)",
          "metadata": "object (optional)"
        },
        "response": {
          "message_id": "string",
          "response": "string",
          "timestamp": "datetime",
          "context": "object"
        }
      },
      "get_history": {
        "path": "/api/v1/chat/history",
        "method": "GET",
        "description": "Obtener historial de mensajes",
        "authentication": true,
        "parameters": {
          "limit": "number (default: 50)",
          "before": "datetime (optional)",
          "after": "datetime (optional)"
        }
      }
    },
    "users": {
      "get_me": {
        "path": "/api/v1/users/me",
        "method": "GET",
        "description": "Obtener información del usuario actual",
        "authentication": true,
        "rate_limited": true,
        "roles": ["user", "admin"],
        "response": {
          "id": "string",
          "username": "string",
          "email": "string",
          "role": "string",
          "created_at": "datetime",
          "last_login": "datetime"
        }
      },
      "update_profile": {
        "path": "/api/v1/users/me",
        "method": "PUT",
        "description": "Actualizar perfil del usuario actual",
        "authentication": true,
        "rate_limited": true,
        "roles": ["user", "admin"],
        "parameters": {
          "email": "string (optional)",
          "full_name": "string (optional)",
          "preferences": "object (optional)"
        }
      },
      "list_users": {
        "path": "/api/v1/users",
        "method": "GET",
        "description": "Listar usuarios (solo administradores)",
        "authentication": true,
        "rate_limited": true,
        "roles": ["admin"],
        "parameters": {
          "page": "number (default: 1)",
          "per_page": "number (default: 20, max: 100)",
          "role": "string (optional)",
          "search": "string (optional)"
        }
      },
      "get_user": {
        "path": "/api/v1/users/{user_id}",
        "method": "GET",
        "description": "Obtener usuario por ID (solo administradores)",
        "authentication": true,
        "rate_limited": true,
        "roles": ["admin"]
      },
      "update_user": {
        "path": "/api/v1/users/{user_id}",
        "method": "PUT",
        "description": "Actualizar usuario (solo administradores)",
        "authentication": true,
        "roles": ["admin"]
      },
      "delete_user": {
        "path": "/api/v1/users/{user_id}",
        "method": "DELETE",
        "description": "Eliminar usuario (solo administradores)",
        "authentication": true,
        "roles": ["admin"]
      }
    }
  },
  "models": {
    "User": {
      "id": "string (ObjectId)",
      "username": "string",
      "email": "string",
      "full_name": "string",
      "hashed_password": "string",
      "is_active": "boolean",
      "is_superuser": "boolean",
      "created_at": "datetime",
      "updated_at": "datetime",
      "last_login": "datetime"
    },
    "UserCreate": {
      "username": "string",
      "email": "string",
      "password": "string",
      "full_name": "string"
    },
    "UserUpdate": {
      "email": "string (opcional)",
      "password": "string (opcional)",
      "full_name": "string (opcional)",
      "is_active": "boolean (opcional)"
    },
    "UserInDB": {
      "extends": "User",
      "hashed_password": "string"
    }
  },
  "security": {
    "jwt": {
      "algorithm": "HS256",
      "access_token_expire_minutes": 60,
      "refresh_token_expire_days": 30
    },
    "password": {
      "min_length": 8,
      "require_uppercase": true,
      "require_lowercase": true,
      "require_numbers": true,
      "require_special_chars": true
    }
  },
  "database": {
    "type": "MongoDB",
    "collections": {
      "users": "Almacena información de usuarios",
      "token_blacklist": "Almacena tokens revocados"
    }
  },
  "dependencies": {
    "fastapi": "^0.68.0",
    "pydantic": "^1.8.0",
    "python-jose": "^3.3.0",
    "passlib": "^1.7.4",
    "python-multipart": "^0.0.5",
    "motor": "^2.5.0",
    "pymongo": "^3.12.0",
    "python-dotenv": "^0.19.0"
  },
  "testing": {
    "frameworks": ["pytest", "httpx"],
    "coverage": {
      "enabled": true,
      "target": 80
    }
  },
  "logging": {
    "level": "INFO",
    "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    "file": "app.log"
  },
  "deployment": {
    "environment_variables": [
      "SECRET_KEY",
      "MONGODB_URL",
      "ENVIRONMENT",
      "API_V1_STR",
      "USERS_OPEN_REGISTRATION"
    ],
    "ports": {
      "development": 8000,
      "production": 80
    }
  }
}
